@model BuySell.WebUI.Models.LaptopAdViewModel

@{
    ViewBag.Title = "post an event";
}
<style>
    body {
        background-image: url('../../images/niro-se-bc-images.jpg');
        margin: 0;
        color: #0cffe9;
    }
   
    a {
        color: #FF5722;
        text-decoration: none;
    }

        a:hover {
            color: #FF5722;
        }

</style>
<h2>post an event</h2>
<hr />

@using (Html.BeginForm("Create", "LaptopAds", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.Label("Event Photo", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="btn btn-default col-md-12" type="file" id="Photo" name="ImageFile" required data-val-required="Upload an image for your Ad." />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Event Kind", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.AccessoryBrandID, new SelectList(Model.AccessoryBrandsList, "ID", "Name"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AccessoryBrandID, "", new { @class = "text-danger" })
            </div>
            @Html.Label("Event President", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.OperatingSystem, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OperatingSystem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Vice-president", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Ram, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ram, "", new { @class = "text-danger" })
            </div>
            @Html.Label("Treasurer", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Processor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Processor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Secretary", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.HardDisk, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HardDisk, "", new { @class = "text-danger" })
            </div>
            @Html.Label("Event-Size", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.ConditionID, new SelectList(Model.ConditionsList, "ID","ConditionType"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConditionID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Currency", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.CurrencyID, new SelectList(Model.CurrenciesList, "ID", "Name"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CurrencyID, "", new { @class = "text-danger" })
            </div>
            @Html.Label("Cost", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Country", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownListFor(model => model.CountryID, new SelectList(Model.CountriesList, "ID", "Name"), htmlAttributes: new { @class = "form-control", @onchange = "FillStates()" })
                @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
            </div>
            @Html.Label("Province", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownListFor(model => model.StateID, new SelectList(Model.StatesList, "ID", "Name"), htmlAttributes: new { @class = "form-control", @onchange = "FillCities()" })
                @Html.ValidationMessageFor(model => model.StateID, "", new { @class = "text-danger" })
            </div>
            @Html.Label("District", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownListFor(model => model.CityID, new SelectList(Model.CitiesList, "ID", "Name"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="post an event" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index" )
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/mylocfiller")
}
