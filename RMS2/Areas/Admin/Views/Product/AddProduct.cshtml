@model RMS2.Models.Product

@{
    ViewBag.Title = "Add Product";
}


<div class="app-title">
    <div>
        <h1><i class="fa fa-dashboard"></i>Add Producta</h1>
        <p>Products Details</p>
    </div>
    <ul class="app-breadcrumb breadcrumb">
        <li class="breadcrumb-item"><i class="fa fa-home fa-lg"></i></li>
        <li class="breadcrumb-item"><a href="#">Products</a></li>
    </ul>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="tile">
            <h3 class="tile-title">Add Product</h3>
            <div class="tile-body">
                @using (Html.BeginForm("AddProduct", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ProductName, "This field is required", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ItemCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.ItemCode, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ItemCode, "This field is required", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Price, "This field is required", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-12">
                                        @*@Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })*@

                                        @Html.DropDownListFor(model => model.Category, new[] {
                                        new SelectListItem() {Text="Choose Category" },
                                       new SelectListItem() {Text="Food" },
                                        new SelectListItem() {Text="Drink" },
                                         new SelectListItem() {Text="Desserts" },
                                         new SelectListItem() {Text="ShortEats" }
                                   }, new { @class = "form-control" } )
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Description, "This field is required", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-12">
                                        <input type="file" name="ImageFile" required />
                                        @*@Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })*@
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                @Html.ActionLink("Back to List", "Index", "Product", new { @class = "btn btn-primary btn-large" })
                                <input type="reset" value="Clear" class="btn btn-danger" />
                                <input type="submit" value="Submit" class="btn btn-success" />
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
